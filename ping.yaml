---
apiVersion: v1
data:
  QA: UUE=
  DEV: REVW
kind: Secret
metadata:
  name: secret-env
  namespace: ping-pong
type: Opaque
---
apiVersion: v1
kind: Namespace
metadata:
  name: ping-pong
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ping-pong
  name: deployment-ping-pong
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-ping-pong
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-ping-pong
    spec:
      containers:
      - image: 016397833229.dkr.ecr.ap-south-1.amazonaws.com/ping-pong:v2
        imagePullPolicy: Always
        name: app-ping-pong
        env: 
        - 
          name: Dev
          valueFrom: 
            secretKeyRef: 
              key: DEV
              name: secret-env
        - 
          name: QA
          valueFrom: 
            secretKeyRef: 
              key: QA
              name: secret-env      
              #env:
              #- name: Dev
              #value: "QA"
              #- name: QA
              #value: "Dev"
        ports:
        - containerPort: 3000
          #--- 
          #apiVersion: v1
          #data: 
          #  QA: UUE=
          #  DEV: REVW
          #kind: Secret
          #metadata: 
          #  name: secret-env
          #type: Opaque

---
apiVersion: v1
kind: Service
metadata:
  namespace: ping-pong
  name: service-ping-pong
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-ping-pong
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: ping-pong
  name: ingress-ping-pong
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /ping
          pathType: Prefix
          backend:
            service:
              name: service-ping-pong
              port:
                number: 80
